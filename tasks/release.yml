---
- when: deploy_type == "restart"
  name: stop app
  monit: name="{{ app_name }}" state=stopped


- when: deploy_type == "restart"
  name: delete release
  become: yes
  become_user: deployer
  become_method: sudo
  command: bash -lc "mix release.clean" chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"


- name: "compile and release"
  become: yes
  become_user: deployer
  become_method: sudo
  command: bash -lc 'SERVER=1 mix do compile, release' chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"
  environment:
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"


- when: deploy_type == "restart"
  name: start app
  monit: name="{{ app_name }}" state=started


- when: deploy_type == "upgrade"
  name: get app version
  become: yes
  become_user: deployer
  become_method: sudo
  command: bash -lc "mix run -e 'IO.puts Mix.Project.config[:version]'" chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"
  register: app_version


- when: deploy_type == "upgrade"
  name: set upgrade command
  become: yes
  become_user: deployer
  become_method: sudo
  set_fact: upgrade_command='rel/{{ app_name }}/bin/{{ app_name }} upgrade "{{ app_version.stdout }}"'


- when: deploy_type == "upgrade"
  name: upgrade app
  become: yes
  become_user: deployer
  become_method: sudo
  command: bash -lc "{{ upgrade_command }}" chdir="{{ project_path }}"
  remote_user: "{{ deployer }}"
  environment:
    MIX_ENV: "{{ mix_env }}"
    PORT: "{{ app_port }}"
